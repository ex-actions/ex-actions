name: 'CI'

on:
  workflow_dispatch:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']

env:
  MIX_ENV: 'test'
  elixir-version: '1.14.1'
  otp-version: '25.1.1'

jobs:
  setup:
    name: 'Setup Node.js'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'

      - name: 'npm ci'
        run: 'npm ci'

  format:
    name: 'prettier'
    runs-on: 'ubuntu-latest'
    needs: ['setup']
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'

      - name: 'npm ci'
        run: 'npm ci'

      - name: 'npm run format:check'
        run: 'npm run format:check'

  lint:
    name: 'eslint'
    runs-on: 'ubuntu-latest'
    needs: ['setup']
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'

      - name: 'npm ci'
        run: 'npm ci'

      - name: 'npm run lint'
        run: 'npm run lint'

  tsc:
    name: 'tsc'
    runs-on: 'ubuntu-latest'
    needs: ['setup']
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'

      - name: 'npm ci'
        run: 'npm ci'

      - name: 'npm run tsc'
        run: 'npm run tsc'

  test:
    name: 'jest'
    runs-on: 'ubuntu-latest'
    needs: ['setup']
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'

      - name: 'npm ci'
        run: 'npm ci'

      - name: 'npm run test'
        run: 'npm run test'

  build:
    name: 'build'
    runs-on: 'ubuntu-latest'
    needs: ['format', 'lint', 'test', 'tsc']
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'

      - name: 'npm ci'
        run: 'npm ci'

      - name: 'npm run build'
        run: 'npm run build'

      - uses: 'actions/upload-artifact@v3'
        with:
          name: 'compiled-actions'
          path: 'actions'

  deploy:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    name: 'Deploy Actions'
    runs-on: 'ubuntu-latest'
    needs: ['build']
    strategy:
      matrix:
        action:
          [
            '{"name": "mix-compile", "key": "${{ secrets.DEPLOY_KEY_MIX_COMPILE }}"}',
            '{"name": "mix-deps-compile", "key": "${{ secrets.DEPLOY_KEY_MIX_DEPS_COMPILE }}"}',
            '{"name": "mix-deps-get", "key": "${{ secrets.DEPLOY_KEY_MIX_DEPS_GET }}"}',
            '{"name": "setup-mix", "key": "${{ secrets.DEPLOY_KEY_SETUP_MIX }}"}',
            '{"name": "ALL"}',
          ]
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/download-artifact@v3'
        with:
          name: 'compiled-actions'
          path: 'actions'

      - name: 'Prepare Output'
        if: ${{ fromJSON(matrix.action).name != 'ALL' }}
        run: |
          cp LICENSE './actions/${{ fromJSON(matrix.action).name }}'
          sed -i '1s/^/### ⚠️This was autogenerated from [ex-actions\/ex-actions](https:\/\/github.com\/ex-actions\/ex-actions) ⚠️\n\&nbsp;\n\n/' './actions/${{ fromJSON(matrix.action).name }}/README.md'

      - name: 'Deploy Action'
        if: ${{ fromJSON(matrix.action).name != 'ALL' }}
        uses: 's0/git-publish-subdir-action@v2.5.1'
        env:
          REPO: 'git@github.com:ex-actions/${{ fromJSON(matrix.action).name }}.git'
          BRANCH: 'main'
          FOLDER: 'actions/${{ fromJSON(matrix.action).name }}'
          SSH_PRIVATE_KEY: ${{ fromJSON(matrix.action).key }}
          MESSAGE: "{msg}\n\nbuild output\ncommit: ex-actions/ex-actions@{sha}\nrun: https://github.com/ex-actions/ex-actions/actions/runs/${{ github.run_id }}"

      - name: 'Prepare Output'
        if: ${{ fromJSON(matrix.action).name == 'ALL' }}
        run: |
          cp README.md ./actions
          sed -i '1s/^/### ⚠️This was autogenerated from [ex-actions\/ex-actions](https:\/\/github.com\/ex-actions\/ex-actions) ⚠️\n\&nbsp;\n\n/' './actions/README.md'

      - name: 'Deploy Action'
        if: ${{ fromJSON(matrix.action).name == 'ALL' }}
        uses: 's0/git-publish-subdir-action@v2.5.1'
        env:
          REPO: 'self'
          BRANCH: 'build'
          FOLDER: 'actions'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "{msg}\n\nbuild output\ncommit: ex-actions/ex-actions@{sha}\nrun: https://github.com/ex-actions/ex-actions/actions/runs/${{ github.run_id }}"

  test_apps:
    name: 'Test Mix Projects'
    runs-on: 'ubuntu-latest'
    needs: ['build']
    strategy:
      matrix:
        app: ['elixir_app', 'elixir_umbrella', 'test_umbrella', 'erlang_lib']
    defaults:
      run:
        working-directory: 'test/fixtures/${{ matrix.app }}'
    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'actions/download-artifact@v3'
        with:
          name: 'compiled-actions'
          path: 'actions'

      - uses: 'erlef/setup-beam@v1'
        with:
          elixir-version: ${{ env.elixir-version }}
          otp-version: ${{ env.otp-version }}
          version-type: 'strict'

      - uses: './actions/setup-mix'
        with:
          working-directory: 'test/fixtures/${{ matrix.app }}'

      - name: 'mix test'
        run: 'mix test'
